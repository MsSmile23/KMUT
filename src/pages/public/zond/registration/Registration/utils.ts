export const fieldColors = {
    'Соответствует': 'rgba(78, 212, 98, 0.5)',
    'Не соответствует': 'rgba(255, 0, 0, 0.5)',
    'Не нормируется': 'none',
}

export const message = 'Доступ запрещён'

export const registrationStates = {
    1: 'Задания нет',
    2: 'Задание выполняется',
    3: 'Успешно',
    4: 'Ошибка',
}

export const getErrorDescription = (errors) => {
    const errorDescriptions = {
        201: 
            `
                Не удалось идентифицировать территориальный объект по IP-адресу.<br />
                При обращении в службу поддержки сообщите ваш текущий IP-адрес: ${errors.ips[0]}
            `,
        202: 
            `
                Не удалось подключиться к [${errors.ips[1]}] для проверки<br />
                получения IP-адреса по DHCP.<br />
                При обращении в службу поддержки сообщите ваш текущий IP-адрес: ${errors.ips[0]} <br />
                и IP оборудования ${errors.ips[1]}
            `
        ,
        203: 
            `
                Необходимо получить IP-адрес по DHCP.<br />
                При обращении в службу поддержки сообщите ваш текущий IP-адрес: ${errors.ips[0]}
            `
        
    }
    
    return errorDescriptions[errors.code]
}

export const mockData = {
    object: {
        code: 'Z-00161',
        address: 'fn-123',
        organizationType: 'Наземный'
    },
    state: 3,
    result: {
        meas_result: {
            'Коэффициент потерь пакетов': 'Соответствует',
            'Время задержки передачи пакетов': 'Соответствует',
            'Вариация времени задержки': 'Не нормируется',
            'Пропускная способность': 'Не соответствует',
        },
        meas_time: 1234567890000    
    },
    errors: {
        code: 202,
        ips: ['192.23.312.15', '161.5.23.123']
    }
}